 <!-- <script> 
            // 2. This code loads the IFrame Player API code asynchronously.
            var tag = document.createElement('script');
      
            tag.src = "https://www.youtube.com/iframe_api";
            var firstScriptTag = document.getElementsByTagName('script')[0];
            firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
      
            // 3. This function creates an <iframe> (and YouTube player)
            //    after the API code downloads.
            var player;
            function onYouTubeIframeAPIReady() {
              player = new YT.Player('player', {
                height: '480',
                width: '640',
                videoId: 'CFFmqRkSVM0',
                playerVars: { 'autoplay': 0, 'controls': 0 },
                events: {
                  'onReady': onPlayerReady,
                  'onStateChange': onPlayerStateChange
                }
              });
            }
      
            // 4. The API will call this function when the video player is ready.
            function onPlayerReady(event) {
              progressBarLoop();
              initalizeButtons();              
            }

            function playVideo(){
              player.playVideo();
            }

            function pauseVideo(){
              player.pauseVideo();
            }

      
            // 5. The API calls this function when the player's state changes.
            //    The function indicates that when playing a video (state=1),
            //    the player should play for six seconds and then stop.
            var done = false;
            function onPlayerStateChange(event) {
              console.log(event.data)
            }
            function stopVideo() {
              player.stopVideo();
            }
            function seekTo(seconds){
              player.seekTo(seconds);
            }
          </script> -->



          <!-- <script>
      var socket = io();

      socket.on("event", function(msg) {
        switch(msg.state){
          case 'play':
            if(Math.abs(msg.time - player.getCurrentTime() > 1)) {
              seekTo(msg.time);
            }
            playVideo();
            break;
          case 'pause':
            pauseVideo();
            break;

          default:
        }
      });

      
      
    </script> -->




    <!-- <script>
      function initalizeButtons(){
        let playButton = $("#playButton");
        let pauseButton = $("#pauseButton");

        playButton.click(function(event){
          player.playVideo();

          let myData = {state:'play', time: player.getCurrentTime()}
          socket.emit('event', myData);
        });

        pauseButton.click(function(event){
          player.pauseVideo();

          let myData = {state:'pause', time: player.getCurrentTime()}
          socket.emit('event', myData);
        });
      }
      
      function progressBarLoop() {
        var progressBar  = $("#progressBar");
        var progressSquare = $("#square");
        let videoLength = player.getDuration();

        progressBar.click(function(event){
          // send seek request
          var divOffset = $(this).offset();
          let seekTo = (event.pageX - divOffset.left)/640*videoLength;
          player.seekTo(seekTo);
          let myData = {state: 'play', time: seekTo};
          socket.emit("event", myData);

          console.log('offset: ', divOffset)

        })
        setInterval(function(){
          if(player == null || progressBar == null) {
            return;
          }
          var fraction = (player.getCurrentTime()/player.getDuration()) * 100;
         
          progressSquare.css('left', fraction.toString()+'%');
        },200)
      }
    </script> -->